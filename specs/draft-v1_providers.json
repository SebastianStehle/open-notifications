{
  "x-generator": "NSwag v13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v10.0.0.0))",
  "openapi": "3.0.0",
  "info": {
    "title": "Open Notfication Host",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:5222"
    }
  ],
  "paths": {
    "/send_update": {
      "post": {
        "tags": [
          "Host"
        ],
        "operationId": "Host_SendUpdate",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendUpdateRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "204": {
            "description": ""
          },
          "404": {
            "description": "Resource not found."
          },
          "4xx": {
            "description": "Client error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsDto"
                }
              }
            }
          },
          "5xx": {
            "description": "Server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsDto"
                }
              }
            }
          }
        }
      }
    },
    "/store_get": {
      "post": {
        "tags": [
          "Host"
        ],
        "operationId": "Host_GetValue",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetValueRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetValueResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found."
          },
          "4xx": {
            "description": "Client error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsDto"
                }
              }
            }
          },
          "5xx": {
            "description": "Server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsDto"
                }
              }
            }
          }
        }
      }
    },
    "/store_set": {
      "post": {
        "tags": [
          "Host"
        ],
        "operationId": "Host_SetValue",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetValueRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetValueResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found."
          },
          "4xx": {
            "description": "Client error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsDto"
                }
              }
            }
          },
          "5xx": {
            "description": "Server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsDto"
                }
              }
            }
          }
        }
      }
    },
    "/store_remove": {
      "post": {
        "tags": [
          "Host"
        ],
        "operationId": "Host_RemoveValue",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveValueRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetValueResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found."
          },
          "4xx": {
            "description": "Client error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsDto"
                }
              }
            }
          },
          "5xx": {
            "description": "Server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsDto"
                }
              }
            }
          }
        }
      }
    },
    "/user_get": {
      "post": {
        "tags": [
          "Host"
        ],
        "operationId": "Host_GetUser",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetUserRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetValueResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found."
          },
          "4xx": {
            "description": "Client error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsDto"
                }
              }
            }
          },
          "5xx": {
            "description": "Server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsDto"
                }
              }
            }
          }
        }
      }
    },
    "/user_set": {
      "post": {
        "tags": [
          "Host"
        ],
        "operationId": "Host_SetValue2",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetUserRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetValueResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found."
          },
          "4xx": {
            "description": "Client error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsDto"
                }
              }
            }
          },
          "5xx": {
            "description": "Server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsDto"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "SendUpdateRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "notificationStatus"
        ],
        "properties": {
          "notificationStatus": {
            "$ref": "#/components/schemas/NotificationStatusDto"
          }
        }
      },
      "NotificationStatusDto": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "status",
          "notificationId"
        ],
        "properties": {
          "status": {
            "$ref": "#/components/schemas/NotificationStatus"
          },
          "notificationId": {
            "type": "string",
            "minLength": 1
          },
          "errors": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ErrorDto"
            }
          }
        }
      },
      "NotificationStatus": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Pending",
          "Send",
          "Delivered",
          "Failed"
        ],
        "enum": [
          "Pending",
          "Send",
          "Delivered",
          "Failed"
        ]
      },
      "ErrorDto": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "description",
          "code"
        ],
        "properties": {
          "description": {
            "type": "string",
            "minLength": 1
          },
          "code": {
            "type": "string",
            "minLength": 1
          },
          "requestField": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ErrorsDto": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "errors"
        ],
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ErrorDto"
            }
          }
        }
      },
      "GetValueResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "value": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "BaseResponse": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "context"
        ],
        "properties": {
          "context": {
            "$ref": "#/components/schemas/RequestContextDto"
          }
        }
      },
      "RequestContextDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "hostUrl": {
            "type": "string"
          },
          "authHeaders": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "trusted": {
            "type": "boolean"
          },
          "tenantId": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          }
        }
      },
      "GetValueRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "key"
        ],
        "properties": {
          "key": {
            "type": "string",
            "minLength": 1
          },
          "tenantId": {
            "type": "string",
            "nullable": true
          },
          "userId": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "SetValueRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "key",
          "value"
        ],
        "properties": {
          "key": {
            "type": "string",
            "minLength": 1
          },
          "value": {
            "type": "string",
            "minLength": 1
          },
          "tenantId": {
            "type": "string",
            "nullable": true
          },
          "userId": {
            "type": "string",
            "nullable": true
          },
          "ifNotExists": {
            "type": "boolean"
          }
        }
      },
      "RemoveValueRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "key"
        ],
        "properties": {
          "key": {
            "type": "string",
            "minLength": 1
          },
          "tenantId": {
            "type": "string",
            "nullable": true
          },
          "userId": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "GetUserRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "tenantId"
        ],
        "properties": {
          "tenantId": {
            "type": "string",
            "minLength": 1
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "propertyName": {
            "type": "string",
            "nullable": true
          },
          "propertyValue": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "SetUserRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "tenantId",
          "updates"
        ],
        "properties": {
          "tenantId": {
            "type": "string",
            "minLength": 1
          },
          "updates": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "propertyName": {
            "type": "string",
            "nullable": true
          },
          "propertyValue": {
            "type": "string",
            "nullable": true
          }
        }
      }
    }
  }
}