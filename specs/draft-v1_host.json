{
  "x-generator": "NSwag v13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v10.0.0.0))",
  "openapi": "3.0.0",
  "info": {
    "title": "Open Notfication Providers",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:5222"
    }
  ],
  "paths": {
    "/get_providers": {
      "post": {
        "tags": [
          "General"
        ],
        "operationId": "General_GetProviders",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetProvidersRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProvidersResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found."
          },
          "4xx": {
            "description": "Client error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsDto"
                }
              }
            }
          },
          "5xx": {
            "description": "Server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsDto"
                }
              }
            }
          }
        }
      }
    },
    "/install": {
      "post": {
        "tags": [
          "General"
        ],
        "operationId": "General_Install",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InstallationRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "204": {
            "description": ""
          },
          "404": {
            "description": "Resource not found."
          },
          "4xx": {
            "description": "Client error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsDto"
                }
              }
            }
          },
          "5xx": {
            "description": "Server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsDto"
                }
              }
            }
          }
        }
      }
    },
    "/uninstall": {
      "post": {
        "tags": [
          "General"
        ],
        "operationId": "General_Uninstall",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InstallationRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "204": {
            "description": ""
          },
          "404": {
            "description": "Resource not found."
          },
          "4xx": {
            "description": "Client error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsDto"
                }
              }
            }
          },
          "5xx": {
            "description": "Server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsDto"
                }
              }
            }
          }
        }
      }
    },
    "/send": {
      "post": {
        "tags": [
          "General"
        ],
        "operationId": "General_Send",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SendResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found."
          },
          "4xx": {
            "description": "Client error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsDto"
                }
              }
            }
          },
          "5xx": {
            "description": "Server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsDto"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "GetProvidersResponse": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "providers"
        ],
        "properties": {
          "providers": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/ProviderInfoDto"
            }
          }
        }
      },
      "ProviderInfoDto": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "displayName",
          "description",
          "logo",
          "type",
          "properties"
        ],
        "properties": {
          "displayName": {
            "type": "string",
            "minLength": 1
          },
          "description": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "logo": {
            "$ref": "#/components/schemas/ProviderInfoLogoDto"
          },
          "type": {
            "$ref": "#/components/schemas/ProviderType"
          },
          "properties": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/PropertyInfoDto"
            }
          },
          "userProperties": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "$ref": "#/components/schemas/PropertyInfoDto"
            }
          }
        }
      },
      "ProviderInfoLogoDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "svg": {
            "type": "string"
          },
          "raster": {
            "type": "string"
          }
        }
      },
      "ProviderType": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Email",
          "Messaging",
          "MobilePush",
          "Chat",
          "Webhook"
        ],
        "enum": [
          "Email",
          "Messaging",
          "MobilePush",
          "Chat",
          "Webhook"
        ]
      },
      "PropertyInfoDto": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "displayName",
          "description",
          "type"
        ],
        "properties": {
          "displayName": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "description": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "type": {
            "$ref": "#/components/schemas/PropertyType"
          },
          "required": {
            "type": "boolean"
          },
          "minLength": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "maxLength": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "minValue": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "maxValue": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "pattern": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "PropertyType": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "String",
          "Text",
          "Password",
          "Boolean",
          "Url",
          "Number"
        ],
        "enum": [
          "String",
          "Text",
          "Password",
          "Boolean",
          "Url",
          "Number"
        ]
      },
      "GetProvidersRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseRequest"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "BaseRequest": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false,
        "required": [
          "context"
        ],
        "properties": {
          "context": {
            "$ref": "#/components/schemas/RequestContextDto"
          }
        }
      },
      "RequestContextDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "hostUrl": {
            "type": "string"
          },
          "authHeaders": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "trusted": {
            "type": "boolean"
          },
          "tenantId": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          }
        }
      },
      "ErrorsDto": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "errors"
        ],
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ErrorDto"
            }
          }
        }
      },
      "ErrorDto": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "description",
          "code"
        ],
        "properties": {
          "description": {
            "type": "string",
            "minLength": 1
          },
          "code": {
            "type": "string",
            "minLength": 1
          },
          "requestField": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "InstallationRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseRequest"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "provider",
              "properties",
              "webhookUrl"
            ],
            "properties": {
              "provider": {
                "type": "string",
                "minLength": 1
              },
              "properties": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "webhookUrl": {
                "type": "string",
                "minLength": 1
              }
            }
          }
        ]
      },
      "SendResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "notificationStatus": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/NotificationStatusDto"
              }
            ]
          }
        }
      },
      "NotificationStatusDto": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "status",
          "notificationId"
        ],
        "properties": {
          "status": {
            "$ref": "#/components/schemas/NotificationStatus"
          },
          "notificationId": {
            "type": "string",
            "minLength": 1
          },
          "errors": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ErrorDto"
            }
          }
        }
      },
      "NotificationStatus": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Pending",
          "Send",
          "Delivered",
          "Failed"
        ],
        "enum": [
          "Pending",
          "Send",
          "Delivered",
          "Failed"
        ]
      },
      "SendRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseRequest"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "provider",
              "user",
              "payload",
              "notificationId",
              "trackingToken",
              "trackingWebhookUrl"
            ],
            "properties": {
              "provider": {
                "type": "string",
                "minLength": 1
              },
              "user": {
                "$ref": "#/components/schemas/SendUserDto"
              },
              "payload": {
                "$ref": "#/components/schemas/MessageDto"
              },
              "notificationId": {
                "type": "string",
                "minLength": 1
              },
              "trackingToken": {
                "type": "string",
                "minLength": 1
              },
              "trackingWebhookUrl": {
                "type": "string",
                "minLength": 1
              }
            }
          }
        ]
      },
      "SendUserDto": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "id",
          "properties"
        ],
        "properties": {
          "id": {
            "type": "string",
            "minLength": 1
          },
          "properties": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "MessageDto": {
        "type": "object",
        "discriminator": {
          "propertyName": "discriminator",
          "mapping": {
            "Email": "#/components/schemas/EmailMessageDto",
            "Sms": "#/components/schemas/SmsMessageDto",
            "Webhook": "#/components/schemas/WebhookMessageDto"
          }
        },
        "x-abstract": true,
        "additionalProperties": false,
        "required": [
          "discriminator"
        ],
        "properties": {
          "discriminator": {
            "type": "string"
          }
        }
      },
      "EmailMessageDto": {
        "allOf": [
          {
            "$ref": "#/components/schemas/MessageDto"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "to",
              "subject",
              "fromEmail"
            ],
            "properties": {
              "to": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "subject": {
                "type": "string",
                "minLength": 1
              },
              "fromEmail": {
                "type": "string",
                "minLength": 1
              },
              "fromName": {
                "type": "string",
                "nullable": true
              },
              "bodyText": {
                "type": "string"
              },
              "bodyEmail": {
                "type": "string"
              },
              "cc": {
                "type": "array",
                "nullable": true,
                "items": {
                  "type": "string"
                }
              },
              "bc": {
                "type": "array",
                "nullable": true,
                "items": {
                  "type": "string"
                }
              }
            }
          }
        ]
      },
      "SmsMessageDto": {
        "allOf": [
          {
            "$ref": "#/components/schemas/MessageDto"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "text",
              "phoneNumber"
            ],
            "properties": {
              "text": {
                "type": "string",
                "minLength": 1
              },
              "phoneNumber": {
                "type": "string",
                "minLength": 1
              }
            }
          }
        ]
      },
      "WebhookMessageDto": {
        "allOf": [
          {
            "$ref": "#/components/schemas/MessageDto"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "url",
              "method"
            ],
            "properties": {
              "url": {
                "type": "string",
                "minLength": 1
              },
              "method": {
                "$ref": "#/components/schemas/WebhookMethod"
              },
              "headers": {
                "type": "object",
                "nullable": true,
                "additionalProperties": {
                  "type": "string"
                }
              },
              "body": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "WebhookMethod": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Post",
          "Put",
          "Patch",
          "Delete",
          "Get"
        ],
        "enum": [
          "Post",
          "Put",
          "Patch",
          "Delete",
          "Get"
        ]
      }
    }
  }
}